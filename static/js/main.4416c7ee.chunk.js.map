{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","style","overflowY","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","prevMovieList","onMovieAdd","useState","foundMovie","setFoundMovie","query","setQuery","isLoading","setIsLoading","isNotFoundMovie","setIsNotFoundMovie","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","cn","value","onChange","target","disabled","trim","onClick","fetch","then","res","ok","Error","status","json","catch","Response","getMovie","newMovie","poster","Poster","Title","Plot","imdbID","finally","find","m","App","setMovies","newMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4416c7ee.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p\n            className=\"title is-8\"\n            data-cy=\"movieTitle\"\n            style={{ overflowY: 'hidden' }}\n          >\n            {movie.title}\n          </p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\nimport { ResponseError } from '../../types/ReponseError';\n\ntype Props = {\n  prevMovieList: Movie[];\n  onMovieAdd: (newMovies: Movie[]) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  prevMovieList,\n  onMovieAdd,\n}) => {\n  const [foundMovie, setFoundMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState<string>('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isNotFoundMovie, setIsNotFoundMovie] = useState(false);\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setIsNotFoundMovie(false);\n  };\n\n  const handleSearch = () => {\n    setIsLoading(true);\n\n    getMovie(query.trim())\n      .then((movie) => {\n        if ((movie as ResponseError).Response === 'False') {\n          setFoundMovie(null);\n          setIsNotFoundMovie(true);\n        } else {\n          const newMovie = movie as MovieData;\n          const poster = newMovie.Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : newMovie.Poster;\n\n          setFoundMovie({\n            title: newMovie.Title,\n            description: newMovie.Plot,\n            imgUrl: poster,\n            imdbId: newMovie.imdbID,\n            imdbUrl: `https://www.imdb.com/title/${newMovie.imdbID}`,\n          });\n        }\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handleAdd = () => {\n    setQuery('');\n    setFoundMovie(null);\n    setIsNotFoundMovie(false);\n\n    if (\n      foundMovie && !prevMovieList.find(m => m.imdbId === foundMovie.imdbId)\n    ) {\n      onMovieAdd([...prevMovieList, foundMovie]);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={(event) => event.preventDefault()}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', {\n                'is-danger': isNotFoundMovie,\n              })}\n              value={query}\n              onChange={handleQueryChange}\n            />\n          </div>\n\n          {isNotFoundMovie && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-link', {\n                'is-loading': isLoading,\n              })}\n              disabled={query.trim() === ''}\n              onClick={handleSearch}\n            >\n              {foundMovie ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {foundMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAdd}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {foundMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n\n          <MovieCard movie={foundMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=35625e98';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`${res.status}`);\n      }\n\n      return res.json();\n    })\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          prevMovieList={movies}\n          onMovieAdd={(newMovies: Movie[]) => setMovies(newMovies)}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}